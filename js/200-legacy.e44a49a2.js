(self["webpackChunkvisual_computing_workshop"]=self["webpackChunkvisual_computing_workshop"]||[]).push([[200],{921:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return f}});var i=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-container",{staticClass:"mt-4"},[a("b-row",{attrs:{"align-content":"center","align-h":"center","align-v":"center"}},[a("h1",{staticClass:"mt-4"},[e._v("Diffuse Reflection")])]),a("b-row",[a("h2",{staticClass:"mt-4"},[e._v("Introduction")])]),a("b-row",{attrs:{"align-h":"left","align-v":"left"}},[a("p",{staticClass:"text-justify"},[e._v("Diffuse reflection is the reflection of light or other waves or particles from a surface such that a ray incident on the surface is scattered at many angles rather than at just one angle as in the case of specular reflection. An ideal diffuse reflecting surface is said to exhibit Lambertian reflection, meaning that there is equal luminance when viewed from all directions lying in the half-space adjacent to the surface. ")])]),a("b-row",{attrs:{"align-content":"center","align-h":"center","align-v":"center"}},[a("b-col",[a("b-img",{staticClass:"mt-4",attrs:{thumbnail:"",src:"https://upload.wikimedia.org/wikipedia/commons/b/bd/Lambert2.gif"}})],1),a("b-col",[a("b-img",{staticClass:"mt-4",attrs:{thumbnail:"",src:"https://media.istockphoto.com/photos/moon-in-black-and-white-picture-id1136640083?k=20&m=1136640083&s=612x612&w=0&h=uKRjHmTcoAHed696QIad3qsf2x5zIX-6G931pZ8cTJA="}})],1)],1),a("b-row",[a("h2",{staticClass:"mt-4"},[e._v("Literature review")])]),a("b-row",[a("p",[e._v("The moon exhibits almost exclusively diffuse reflection (also called Lambertian reflection), i.e. light is reflected into all directions without specular highlights. Other examples of such materials are chalk and matte paper; in fact, any surface that appears dull and matte. ")])]),a("b-row",[a("p",[e._v("In the case of perfect diffuse reflection, the intensity of the observed reflected light depends on the cosine of the angle between the surface normal vector and the ray of the incoming light. As illustrated in the figure, it is common to consider normalized vectors starting in the point of a surface, where the lighting should be computed: the normalized surface normal vector "),a("strong",[e._v("N")]),e._v(" is orthogonal to the surface and the normalized light direction "),a("strong",[e._v("L")]),e._v(" points to the light source. ")])]),a("b-row",{attrs:{"align-content":"center","align-h":"center","align-v":"center"}},[a("b-col",{staticClass:"text-center",attrs:{"align-self":"center"}},[a("b-img",{staticClass:"mt-4",staticStyle:{height:"300px"},attrs:{thumbnail:"",src:"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Diffuse_Reflection_Vectors.svg/1920px-Diffuse_Reflection_Vectors.svg.png"}})],1)],1),a("b-row",{staticClass:"mt-4"},[a("p",[e._v("For the observed diffuse reflected light "),a("vue-mathjax",{attrs:{formula:"$I_{diffuse}$"}}),e._v(", we need the cosine of the angle between the normalized surface normal vector N and the normalized direction to the light source "),a("vue-mathjax",{attrs:{formula:"$L$"}}),e._v(", which is the dot product "),a("vue-mathjax",{attrs:{formula:"$N \\cdot L$"}})],1)]),a("b-row",{staticClass:"mt-4"},[a("b-col",[a("vue-mathjax",{staticClass:"mt-4 big",attrs:{formula:"$$N \\cdot L = |N| |L| \\cos{\\measuredangle N, L}$$"}})],1)],1),a("b-row",{staticClass:"mt-4"},[a("p",[e._v("If the dot product "),a("vue-mathjax",{attrs:{formula:"$N \\cdot L$"}}),e._v(" is negative, the light source is on the “wrong” side of the surface and we should set the reflection to 0. This can be achieved by using "),a("vue-mathjax",{attrs:{formula:"$max(0, N \\cdot L)$"}}),e._v(", which makes sure that the value of the dot product is clamped to 0 for negative dot products. Furthermore, the reflected light depends on the intensity of the incoming light "),a("vue-mathjax",{attrs:{formula:"$I_{incomming}$"}}),e._v(" and a material constant "),a("vue-mathjax",{attrs:{formula:"$k_{diffuse}$"}}),e._v(" for the diffuse reflection: for a black surface, the material constant "),a("vue-mathjax",{attrs:{formula:"$k_{diffuse}$"}}),e._v(" is 0, for a white surface it is 1. The equation for the diffuse reflected intensity is then: ")],1)]),a("b-row",{staticClass:"mt-4"},[a("b-col",[a("vue-mathjax",{staticClass:"mt-4 big",attrs:{formula:"$$I_{diffuse} = I_{incomming} k_{diffuse} max(0, N \\cdot L)$$"}})],1)],1),a("b-row",[a("h2",{staticClass:"mt-4"},[e._v("Methods")])]),a("b-row",{staticClass:"mt-4"},[a("p",[e._v("Now let's see a procedure to realize this Diffuse Reflection, this procedure may be performed for every pixel in figure")]),a("p",[a("ol",[a("li",[e._v(" Get the vector "),a("vue-mathjax",{attrs:{formula:"$N$"}}),e._v(" as the normal vector of this point to the surface. ")],1),a("li",[e._v(" Get the vector "),a("vue-mathjax",{attrs:{formula:"$L$"}}),e._v(" as the vector from the point to the light. ")],1),a("li",[e._v(" Normalize the vectors as "),a("vue-mathjax",{attrs:{formula:"$|N|$"}}),e._v(" and "),a("vue-mathjax",{attrs:{formula:"$|L|$"}}),e._v(". ")],1),a("li",[e._v(" Normalize the vectors as "),a("vue-mathjax",{attrs:{formula:"$|N|$"}}),e._v(" and "),a("vue-mathjax",{attrs:{formula:"$|L|$"}}),e._v(". ")],1),a("li",[e._v(" Calculate the resulting color of multiply the light color "),a("vue-mathjax",{attrs:{formula:"$C_{light}$"}}),e._v(" and the color of the point "),a("vue-mathjax",{attrs:{formula:"$C$"}}),e._v(". ")],1),a("li",[e._v(" Multiply the previus result "),a("vue-mathjax",{attrs:{formula:"$C_{light}C$"}}),e._v(" by the maximun between 0 and "),a("vue-mathjax",{attrs:{formula:"$N \\cdot L$"}}),e._v(". ")],1),a("li",[e._v(" The resulting color is the color of the point. ")])])])]),a("b-row",{staticClass:"mt-4"},[a("p",[e._v("Let's see an implementation of this shader using and extention of GLSL on HLSL in unity")])]),a("b-row",[a("h2",{staticClass:"mt-4"},[e._v("Code and Results")])]),a("b-row",{attrs:{"align-content":"center","align-h":"center","align-v":"center"}},[a("SketchUnity",{attrs:{dataPath:"scketch/Light/Build/Unity.data",loaderPath:"scketch/Light/Build/Unity.loader.js",frameworkPath:"scketch/Light/Build/Unity.framework.js",codePath:"scketch/Light/Build/Unity.wasm",streamingAssetsPath:"scketch/Light/StreamingAssets",companyName:"Visual Computing",productName:"Diffuse Reflection",productVersion:"1.0",width:"960",height:"600"}})],1),a("b-row",{staticClass:"mt-4",attrs:{"align-h":"start","align-v":"start"}},[a("h3",[e._v("Source Code Unity")])]),a("div",[a("code-highlight",{attrs:{language:"glsl"}},[a("pre",[e._v('Shader "Unity Shader" {\n    Properties{\n        _Flag("Flag", Float) = 0\n    }\n    SubShader {\n        Pass {\n            Tags { "LightMode" = "ForwardBase" }\n\n            GLSLPROGRAM\n\n            uniform float _Flag;\n            uniform mat4 _Object2World;\n            uniform mat4 _World2Object;\n            uniform vec4 _WorldSpaceLightPos0;\n            uniform vec4 _LightColor0;\n\n            #ifdef VERTEX\n\n            varying vec4 color;\n\n            void main() {\n                mat4 modelMatrix = _Object2World;\n                mat4 modelMatrixInverse = _World2Object;\n                vec3 normalDirection = normalize(vec3(vec4(gl_Normal, 0.0) * modelMatrixInverse));\n                vec3 lightDirection = normalize(vec3(_WorldSpaceLightPos0));\n                vec3 diffuseReflection = \n                    vec3(_LightColor0) * \n                    (_Flag == 1.0 ? (vec3(gl_Vertex) + vec3(0.5, 0.5, 0.5)) : vec3(0.5, 0.5, 0.5)) * \n                    max(0.0, dot(normalDirection, lightDirection));\n\n                color = vec4(diffuseReflection, 1.0);\n                gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n            }\n            #endif\n\n            #ifdef FRAGMENT\n\n            varying vec4 color;\n\n            void main()  {\n                gl_FragColor = color;\n            }\n            #endif\n\n            ENDGLSL\n        }\n    }\n}\n                ')])])],1),a("b-row",[a("h2",[e._v("Discussion")])]),a("b-row",[a("p",[e._v("Diffuse reflection is only one of many illumination models that we can find, there are cases where you have non-flat surfaces, with different materials and opacities, and you can even have several lights. What we have seen in this web page is just a small glimpse of how sophisticated and complex lighting models can be.")])]),a("b-row",[a("h2",[e._v("Conclusion")])]),a("b-row",[a("p",[e._v("Working with lights in computer graphics requires great knowledge of how these waves behave, it is important to abstract the behavior of things to computation and in the case of lights it is something that can be easily worked with using shaders. ")])])],1)},n=[],r=a(6596),o=a(4148),s=(a(7704),a(2586),a(2977)),l={name:"VisualIllusion",components:{CodeHighlight:o.Z,"vue-mathjax":s.VueMathjax,SketchUnity:r.Z},data:function(){return{}},created:function(){}},c=l,u=a(1001),h=(0,u.Z)(c,i,n,!1,null,"2899c0a9",null),f=h.exports},5837:function(e,t,a){var i=a(2109),n=a(7854);i({global:!0},{globalThis:n})},2586:function(){Prism.languages.glsl=Prism.languages.extend("clike",{comment:[/\/\*[\s\S]*?\*\//,/\/\/(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/],number:/(?:\b0x[\da-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ulf]*/i,keyword:/\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\b/}),Prism.languages.insertBefore("glsl","comment",{preprocessor:{pattern:/(^[ \t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\b)?/m,lookbehind:!0,alias:"builtin"}})},7704:function(e,t,a){a(4916),a(5306),a(7941),a(561),a(2222),function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(a,i,n,r){if(a.language===i){var o=a.tokenStack=[];a.code=a.code.replace(n,(function(e){if("function"===typeof r&&!r(e))return e;var n,s=o.length;while(-1!==a.code.indexOf(n=t(i,s)))++s;return o[s]=e,n})),a.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(a,i){if(a.language===i&&a.tokenStack){a.grammar=e.languages[i];var n=0,r=Object.keys(a.tokenStack);o(a.tokens)}function o(s){for(var l=0;l<s.length;l++){if(n>=r.length)break;var c=s[l];if("string"===typeof c||c.content&&"string"===typeof c.content){var u=r[n],h=a.tokenStack[u],f="string"===typeof c?c:c.content,m=t(i,u),d=f.indexOf(m);if(d>-1){++n;var g=f.substring(0,d),v=new e.Token(i,e.tokenize(h,a.grammar),"language-"+i,h),p=f.substring(d+m.length),b=[];g&&b.push.apply(b,o([g])),b.push(v),p&&b.push.apply(b,o([p])),"string"===typeof c?s.splice.apply(s,[l,1].concat(b)):c.content=b}}else c.content&&o(c.content)}return s}}}})}(Prism)}}]);
//# sourceMappingURL=200-legacy.e44a49a2.js.map